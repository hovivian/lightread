<%- contentFor('styles') %>
<%- contentFor('scripts') %>
<script>

const handleAddToReadList = () => {
  $('.search-result button[type="submit"]').attr('disabled', true);

  axios({
    method: 'POST',
    url: `/api/my/to-read-list`,
    data: {
      bookId: $(e.currentTarget).data('book-id'),
      title: $(e.currentTarget).data('title'),
      description: $(e.currentTarget).data('description'),
    }
  }).then((resp) => {
    $('.search-result button[type="submit"]').text('Added').addClass('added');
  }).catch((err) => {
    if (err.response.status === 401) window.location.href = '/login'
  }).finally(() => {
    $('.search-result button[type="submit"]').attr('disabled', false);
  })
}

const results = (books) => {
  console.log('results');
  console.log(books);
  return books.map((book) => {
    return  `
      <div class="search-result d-flex">
        <div class="book-img d-flex flex-column">
        <img class="mb-3" src="${book.imgUrl}">
        <button
          class="addtolist-btn"
          type="button"
          data-book-id="${book.id}"
          data-book-title="${book.title}"
          data-book-description="${book.description}"
        >ðŸ“– Add To To-Read List</button>
        </div>

        <div class="book-info">
          <h1>${book.title}</h1>
          <p>Author: ${book.author}</p>
          <div class="mb-3">${book.desc}</div>
          <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">Read More</button>
        </div>
      </div>
    `
  }).join('');
}

const generateResults = (books) => {
  console.log('generate results!!!');
  const $searchResultsContainer = $('#search-results-container');
  const $results = results(books);

  $searchResultsContainer.html('').append($results);
}

const bookData = (books) => {
  let bookInfo = [];
  for (let i = 0; i < books.items.length; i++) {
    let item = books.items[i];
    let details =
      {
      id: item.volumeInfo.industryIdentifiers[0].identifier,
      title: item.volumeInfo.title,
      desc: item.volumeInfo.description,
      imgUrl: item.volumeInfo.imageLinks.smallThumbnail,
      author: item.volumeInfo?.authors?.[0] || 'N/A'
      }
  bookInfo.push(details);
}
return bookInfo;
}

const handleSubmit = (e) => {
  e.preventDefault();

  // $('#search-book-form button[type="submit"]').attr('disabled', true);
  const query = parseFormData(new FormData(e.currentTarget));

  axios({
    method: 'GET',
    url: `https://www.googleapis.com/books/v1/volumes`,
    params: {
      ...query,
      key: 'AIzaSyDrsPi3InGl9CO_EZTAEQfHtco_ch7-f-A'
    }
  }).then((resp) => {
    console.log('handle submit!');
    console.log(resp.data);
    generateResults(bookData(resp.data));
    console.log('after handle submit!!');
  }).catch((err) => {
      return(err);
  })
}

const generateTitle = () => {
  return `
  <h1 class="text-center mb-3">Search The Library</h1>
    `
}

const generateSearchBar = (info) => {
  return `
    <div class="row text-center">
      <div id="form-wrapper" class="col-12 col-md-10 offset-md-1 col-lg-8 offset-lg-2">
        <form id="search-book-form">
          <input type="text" name="q" id="searchBar" placeholder="Enter Book Title">
          <button type="submit" id="submitSearch">Search</button>
        </form>
      </div>
    </div>
  `
}

const generatePage = (info) => {
  const $page = $('#search-bar-container');
  const $title = generateTitle();
  const $searchBar = generateSearchBar(info);

  $page.html('').append($title).append($searchBar);
}

$(document).ready(() => {
  generatePage();
  $('#search-bar-container').on('submit', '#search-book-form', handleSubmit);
  $('#search-results-container').on('click', '.addToReadList', handleAddToReadList);
})
</script>

<%- contentFor('body') %>
<div id="pages-lightread-library" class="container mt-5 mb-5">
  <div id="search-bar-container" class="d-flex flex-column"></div>
  <div id="search-results-container"></div>
</div>
