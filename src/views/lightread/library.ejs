<%- contentFor('styles') %>
<%- contentFor('scripts') %>
<script>
const handleAddToReadList = (e) => {
  $('.search-result button[type="submit"]').attr('disabled', true);

  axios({
    method: 'POST',
    url: `/api/my/toreadlist`,
    data: {
      identifierId: $(e.currentTarget).data('book-id'),
      title: $(e.currentTarget).data('book-title'),
      author: $(e.currentTarget).data('book-author'),
      image: $(e.currentTarget).data('book-image')

    }
  }).then((resp) => {
    $('.search-result button[type="submit"]').text('Added').addClass('added');
  }).catch((err) => {
    if (err.response.status === 401) window.location.href = '/lightread/login'
  }).finally(() => {
    $('.search-result button[type="submit"]').attr('disabled', false);
  })
}

const results = (books) => {
  try {
    return books.map((book) => {
      let shortenText = book.desc.substring(0, 300);

      return  `
        <div class="search-result d-flex">
          <div class="book-img d-flex flex-column align-items-center">
          <img class="mb-3" src="${book.imgUrl}">
          <button
            class="addtolist-btn mb-3"
            style="width: 190px;"
            type="button"
            data-book-id="${book.identifierId}"
            data-book-title="${book.title}"
            data-book-image="${book.imgUrl}"
            data-book-author="${book.author}"
            data-book-description="${book.description}"
          >üìñ Add To To-Read List</button>

          <button
            class="new-book-review-btn btn-primary"
            style="width: 190px;"
            type="button"
            data-bs-toggle="modal"
            data-bs-target="#newBookReviewModal"
            data-book-id="${book.identifierId}"
            data-book-title="${book.title}"
            data-book-image="${book.imgUrl}"
            data-book-author="${book.author}"
            data-book-description="${book.description}"
            >‚úçÔ∏è Write Book Review
          </button>
          </div>

          <div class="book-info">
            <h1>${book.title}</h1>
            <p>Author: ${book.author}</p>
            <div class="mb-3">${shortenText}...<a href="https://books.google.com.hk/books?id=${book.id}" target="_blank">Read More</a></div>
          </div>
        </div>
      `
    }).join('');
  } catch (err) {
    console.log(err)
  }
}

const generateResults = (books) => {
  const $searchResultsContainer = $('#search-results-container');
  const $results = results(books);

  $searchResultsContainer.html('').append($results);
}

const bookData = (books) => {
  let bookInfo = [];
  for (let i = 0; i < books.items.length; i++) {
    let item = books.items[i];
    if (item.volumeInfo.industryIdentifiers) {
      let details = {
        identifierId: item.volumeInfo.industryIdentifiers[0].identifier || item.volumeInfo.industryIdentifiers[1].identifier || item.id,
        id: item.id,
        title: item.volumeInfo.title || 'N/A',
        desc: item.volumeInfo.description || 'No Description',
        imgUrl: item.volumeInfo?.imageLinks?.thumbnail || '../../images/book-cover.png',
        author: item.volumeInfo?.authors?.[0] || 'N/A'
      }

      bookInfo.push(details);
    }
  }
  return bookInfo;
}

const handleSubmit = (e) => {
  e.preventDefault();

  const query = parseFormData(new FormData(e.currentTarget));

  axios({
    method: 'GET',
    url: `https://www.googleapis.com/books/v1/volumes`,
    params: {
      ...query,
      key: 'AIzaSyDrsPi3InGl9CO_EZTAEQfHtco_ch7-f-A'
    }
  }).then((resp) => {
    console.log(resp);
    console.log(query);
    generateResults(bookData(resp.data));
  }).catch((err) => {
    return(err);
  })
}

const categoriesBtn = () => {
  return `
    <div class="d-flex justify-content-around mb-5">
      <button id="fantasy" type="button" class="categoryBtn">Fantasy</button>
      <button id="art" type="button" class="categoryBtn">Art</button>
      <button id="history" type="button" class="categoryBtn">History</button>
      <button id="nonfiction" type="button" class="categoryBtn">Non Fiction</button>
      <button id="children" type="button" class="categoryBtn">Children's</button>
      <button id="philosophy" type="button" class="categoryBtn">Philosophy</button>
      <button id="psychology" type="button" class="categoryBtn">Psychology</button>
      <button id="thriller" type="button" class="categoryBtn">Thriller</button>
    </div>
  `
}

const handleCategories = (e)  => {
  const query = e.currentTarget.id;

  axios({
    method: 'GET',
    url: `https://www.googleapis.com/books/v1/volumes`,
    params: {
      q: `subject:${query}`,
      key: 'AIzaSyDrsPi3InGl9CO_EZTAEQfHtco_ch7-f-A'
    }
  }).then((resp) => {
    generateResults(bookData(resp.data));
  }).catch((err) => {
    console.log(err)
  })
}

const bookReviewForm = ({ identifierId, title, image, author }) => {
  return `
  <form id="book-review-new-form">
    <input name="book[identifierId]" value="${identifierId}" class="d-none">
    <input name="book[image]" value="${image}" class="d-none">
    <input name="book[title]" value="${title}" class="d-none">
    <input name="book[author]" value="${author}" class="d-none">
    <div class="mb-3">
      <label for="book-review-title" class="form-label">Book Title</label>
      <input
        id="book-review-title"
        class="form-control"
        value="${title}"
        disabled
      ></input>
      <div class="invalid-feedback"></div>
    </div>
    <div class="mb-3">
      <label for="book-review-content" class="form-label">Content</label>
      <textarea
        id="book-review-content"
        class="form-control"
        name="content"
        rows="3"
      ></textarea>
      <div class="invalid-feedback"></div>
    </div>
  </form>
  `
}

const generateBookReviewForm = ({ identifierId, title, image, author, description }) => {
  const $formContainer = $('#book-review-form-wrapper');
  const $bookReviewForm = bookReviewForm({ identifierId, title, image, author, description });

  $formContainer.html('').append($bookReviewForm);
}

const handleNewBookReview = (e) => {
  e.preventDefault()
  const data = new FormData($('#book-review-new-form')[0])
  $('#modal-footer button[type="submit"]').attr('disabled', true)
  axios({
    method: 'POST',
    url: '/api/my/bookreviews',
    data
  }).then((resp) => {
    window.location.href = `/lightread/my/profile`
  }).catch((err) => {
    if (err.response.status === 401) window.location.href = '/lightread/login'
  })
}

const handleBookReviewForm = (e) => {
  e.preventDefault()

  const $elem = $(e.currentTarget)
  const identifierId = $elem.data('book-id')
  const title = $elem.data('book-title')
  const image = $elem.data('book-image')
  const author = $elem.data('book-author')
  const description = $elem.data('book-description')

  generateBookReviewForm({ identifierId, title, image, author, description });
}

const generateTitle = () => {
  return `
  <h1 class="text-center mb-3">Search The Library</h1>
    `
}

const generateSearchBar = (info) => {
  return `
    <div class="row text-center">
      <div id="form-wrapper" class="col-12 col-md-10 offset-md-1 col-lg-8 offset-lg-2">
        <form id="search-book-form">
          <input type="text" name="q" id="searchBar" placeholder="Enter Book Title">
          <button type="submit" id="submitSearch">Search</button>
        </form>
      </div>
    </div>
  `
}

const generatePage = (info) => {
  const $page = $('#search-bar-container');
  const $title = generateTitle();
  const $searchBar = generateSearchBar(info);
  const $categories = categoriesBtn();

  $page.html('').append($title).append($searchBar).append($categories);
}

$(document).ready(() => {
  generatePage();
  $('#search-bar-container').on('submit', '#search-book-form', handleSubmit);
  $('#search-results-container').on('click', '.addtolist-btn', handleAddToReadList);
  $('#search-bar-container').on('click', '.categoryBtn', handleCategories);
  $('#search-results-container').on('click', '.new-book-review-btn', handleBookReviewForm);
  $('#newBookReviewModal').on('click', '#post-button', handleNewBookReview);
})
</script>

<%- contentFor('body') %>
<div id="pages-lightread-library" class="container mt-5 mb-5">
  <div id="search-bar-container" class="d-flex flex-column"></div>
  <div id="search-results-container"></div>
</div>

<div class="modal fade" id="newBookReviewModal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Create New Book Review</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div id="book-review-form-wrapper" class="col-12 col-md-10 offset-md-1 col-lg-8 offset-lg-2">
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" id="post-button" class="btn btn-primary">Post</button>
      </div>
    </div>
  </div>
</div>
